<?xml version="1.0" encoding="UTF-8"?>

<model xmlns="http://codehaus-plexus.github.io/MODELLO/1.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://codehaus-plexus.github.io/MODELLO/1.4.0 http://codehaus-plexus.github.io/modello/xsd/modello-1.4.0.xsd"
  xml.namespace="http://codehaus-plexus.github.io/MODELLO/${version}"
  xml.schemaLocation="http://codehaus-plexus.github.io/modello/xsd/modello-${version}.xsd">
  <id>modello</id>
  <name>Modello</name>
  <description>
    This is a reference for the Modello descriptor used to describe a model with Modello.
  </description>

  <defaults>
    <default>
      <key>package</key>
      <value>org.codehaus.modello.model.self</value>
    </default>
  </defaults>

  <classes>
    <class java.abstract="true">
      <name>BaseElement</name>
      <description>
        Common attributes for most of the elements.
      </description>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>name</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>The name of the element.</description>
        </field>
        <field>
          <name>description</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            A user-level description of the element.
          </description>
        </field>
        <field>
          <name>comment</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            A private comment about the element.
          </description>
        </field>
      </fields>
    </class>

    <class>
      <name>VersionedElement</name>
      <description>
        An element with version information.
      </description>
      <version>1.0.0+</version>
      <superClass>BaseElement</superClass>
      <fields>
        <field xml.tagName="version" xml.insertParentFieldsUpTo="name">
          <name>versionRange</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            The versions related to this element.
            Examples: <code>1.0.0</code> (a precise version), <code>1.0.0+</code> (a version or higher),
            <code>1.0.0/2.0.0</code> (a version range).]]>
          </description>
        </field>
        <!-- this field is available in BaseElement class, but not read in ModelReader: should be removed?
        <field>
          <name>deprecatedVersion</name>
          <version>1.0.0+</version>
          <type>String</type>
        </field-->
        <field>
          <name>annotations</name>
          <version>1.3.0+</version>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            Java annotations for the element (inserted in generated sources for the model only if Java 5 source
            generation feature is enabled).
          </description>
        </field>
      </fields>
    </class>

    <class rootElement="true">
      <name>Model</name>
      <description>
        Root tag for the description of a model.
      </description>
      <version>1.0.0+</version>
      <superClass>BaseElement</superClass>
      <fields>
        <field xml.attribute="true" xml.tagName="java.suppressAllWarnings">
          <name>suppressAllWarnings</name>
          <version>1.1.0+</version>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <description><![CDATA[
            Add <code>@SuppressWarnings( "all" )</code> to all generated sources if Java 5 is enabled.]]>
          </description>
          <comment>see org.codehaus.modello.plugins.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.namespace">
          <name>namespace</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            The namespace to use when generating XML content. Since Modello 1.0, this value can contain
            <code>${version}</code> placeholder, which will be replaced by the model version during generation.
            Before Modello 1.0, this attribute was in class element.]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.schemaLocation">
          <name>schemaLocation</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            The schemaLocation to use when generating XML content. Since Modello 1.0-alpha-13, this value can contain
            <code>${version}</code> placeholder, which will be replaced by the model version during generation.
            Before Modello 1.0, this attribute was in class element.]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xsd.namespace">
          <name>xsdNamespace</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            The namespace to use when generating XSD. Since Modello 1.0: <ul>
            <li>if this value is not set, <code>xml.namespace</code> is used instead,</li>
            <li>this value can contain <code>${version}</code> placeholder, which will be replaced by the model version
            during generation.</li></ul>]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xsd.metadata.XsdMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xsd.targetNamespace">
          <name>xsdTargetNamespace</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            The targetNamespace to use when generating XSD. Since Modello 1.0<ul>
            <li>if this value is not set, <code>xml.namespace</code> or <code>xsd.namespace</code> is used instead,</li>
            <li>this value can contain <code>${version}</code> placeholder, which will be replaced by the model version
            during generation.</li></ul>]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xsd.metadata.XsdMetadataPlugin</comment>
        </field>
        <field>
          <name>id</name>
          <version>1.0.0+</version>
          <required>true</required>
          <type>String</type>
          <description>Unique identifier of this model.</description>
        </field>
        <field xml.insertParentFieldsUpTo="comment" xdoc.separator="blank">
          <name>defaults</name>
          <version>1.0.0+</version>
          <association>
            <type>ModelDefault</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            List of defaults settings for properties of this model.
          </description>
        </field>
        <field>
          <name>versionDefinition</name>
          <version>1.0.0+</version>
          <description>Information on model version recognition support.</description>
          <association>
            <type>VersionDefinition</type>
          </association>
        </field>
        <field xdoc.separator="blank">
          <name>interfaces</name>
          <version>1.0.0+</version>
          <association>
            <type>ModelInterface</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            List of interfaces provided by the model.
          </description>
        </field>
        <field xdoc.separator="blank">
          <name>classes</name>
          <version>1.0.0+</version>
          <required>true</required>
          <association xml.tagName="class">
            <type>ModelClass</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            List of classes provided by the model.
          </description>
        </field>
      </fields>
    </class>

    <class>
      <name>ModelDefault</name>
      <version>1.0.0+</version>
      <description><![CDATA[
        A default setting for some of the properties of this model. Available properties are:
 <table>
 <tr><th>key</th><th>since</th><th>default value</th><th>usage</th></tr>
 <tr><td><code>package</code></td><td></td>
   <td><code>model</code></td>
   <td>The package where java classes are generated by default if no <code>packageName</code> defined
     in class or interface model</td>
 </tr>
 <tr><td><code>java.util.List</code></td><td></td>
   <td><code>new java.util.ArrayList&lt;?&gt;()</code></td>
   <td>The default code generated for <code>List</code> fields initialization</td>
 </tr>
 <tr><td><code>java.util.Set</code></td><td></td>
   <td><code>new java.util.HashSet&lt;?&gt;()</code></td>
   <td>The default code generated for <code>Set</code> fields initialization</td>
 </tr>
 <tr><td><code>java.util.Map</code></td><td></td>
   <td><code>new java.util.HashMap()</code></td>
   <td>The default code generated for <code>Map</code> fields initialization</td>
 </tr>
 <tr><td><code>java.util.Properties</code></td><td></td>
   <td><code>new java.util.Properties()</code></td>
   <td>The default code generated for <code>Properties</code> fields initialization</td>
 </tr>
 <tr><td><code>strictXmlAttributes</code></td><td>1.2</td>
   <td><code>true</code></td>
   <td>If set to <code>true</code>, reading an XML document with strict parsing enabled not only checks
     elements but attributes too (new in Modello 1.2). Setting this property to <code>false</code>
     makes strict parsing behave like previously, ie ignoring attributes.</td>
 </tr>
 <tr><td><code>checkDeprecation</code></td><td></td>
   <td><code>false</code></td>
   <td>If set to <code>true</code>, checks that if a class has a version range with a specified upper version,
     its <code>deprecatedVersion</code> is not null</td>
 </tr>
 </table>]]>
      </description>
      <fields>
        <field>
          <name>key</name>
          <version>1.0.0+</version>
          <required>true</required>
          <type>String</type>
          <description><![CDATA[The key to this property. Can be one of: <code>checkDeprecation</code>,
           <code>package</code>, <code>java.util.List</code>, <code>java.util.Map</code>,
           <code>java.util.Properties</code>, <code>java.util.Set</code>,
           <code>strictXmlAttributes</code>.]]></description>
        </field>
        <field>
          <name>value</name>
          <version>1.0.0+</version>
          <required>true</required>
          <type>String</type>
          <description>The value of this property.</description>
        </field>
      </fields>
    </class>

    <class>
      <name>VersionDefinition</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>type</name>
          <version>1.0.0+</version>
          <required>true</required>
          <type>String</type>
          <description><![CDATA[The type of model version definition recognition. Can be one of: <code>field</code>,
            <code>namespace</code>, <code>field+namespace</code>.]]></description>
        </field>
        <field>
          <name>value</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[If type contains <code>field</code>, the name of the field containing the model
            version.]]></description>
        </field>
      </fields>
    </class>

    <class>
      <name>ModelInterface</name>
      <version>1.0.0+</version>
      <description>An interface provided by the model.</description>
      <superClass>VersionedElement</superClass>
      <fields>
        <field xml.insertParentFieldsUpTo="versionRange">
          <name>superInterface</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The name of the super interface for this interface.
          </description>
        </field>
        <field>
          <name>packageName</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The destination package name for this interface.
          </description>
        </field>
        <field xml.insertParentFieldsUpTo="comment">
          <name>codeSegments</name>
          <version>1.0.0+</version>
          <association>
            <type>CodeSegment</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            List of code segments appended to this interface.
          </description>
        </field>
      </fields>
    </class>

    <class>
      <name>CodeSegment</name>
      <version>1.0.0+</version>
      <description>
        A segment of code to be appended to this element.
      </description>
      <fields>
        <field>
          <name>name</name>
          <version>1.0.0/1.2.9</version>
          <type>String</type>
          <description>The name of the element (unused).</description>
        </field>
        <field xml.tagName="version">
          <name>versionRange</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            The versions related to this element.
            Examples: <code>1.0.0</code> (a precise version), <code>1.0.0+</code> (a version or higher),
            <code>1.0.0/2.0.0</code> (a version range).]]>
          </description>
        </field>
        <field>
          <name>description</name>
          <version>1.0.0/1.2.9</version>
          <type>String</type>
          <description>
            A user-level description of the element (unused).
          </description>
        </field>
        <field>
          <name>comment</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            A private comment about the element.
          </description>
        </field>
        <field>
          <name>code</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>The code block.</description>
        </field>
      </fields>
    </class>

    <class>
      <name>ModelClass</name>
      <version>1.0.0+</version>
      <description>A class for this model.</description>
      <superClass>VersionedElement</superClass>
      <fields>
        <field xml.attribute="true">
          <name>rootElement</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>
            Indicates that this class is the root of the model (only one class in a model can have this attribute set
            to true).
          </description>
          <comment>see org.codehaus.modello.plugin.model.ModelMetadataPlugin</comment>
        </field>
        <field xml.attribute="true">
          <name>javag.generateToString</name>
          <version>1.8.0+</version>
          <type>String</type>
          <description>
            Will generate toString method for all fields of the class (disable per default).
            toString method is still generated per default for identifier field.
          </description>
        </field>
        <field xml.attribute="true">
          <name>xml.standaloneRead</name>
          <version>1.4.1+</version>
          <type>boolean</type>
          <description>
            If true, the xml reader will have read methods that allow to read xml that has this class as root element.
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true">
          <name>locationTracker</name>
          <version>1.4.0+</version>
          <type>String</type>
          <description><![CDATA[
            Indicates that this class is used to track line/column information (at most one class in a model can have this
            attribute set). The value of this attribute specifies the field name (in plural form, e.g. "locations") that
            will be used in all other model classes to store the location tracking information and indirectly controls
            the names of the generated accessors.]]>
          </description>
          <comment>see org.codehaus.modello.plugin.model.ModelMetadataPlugin</comment>
        </field>
        <field xml.attribute="true">
          <name>sourceTracker</name>
          <version>1.4.0+</version>
          <type>String</type>
          <description><![CDATA[
            Indicates that this class is used to track source file information (at most one class in a model can have
            this attribute set). The value of this attribute specifies the field name (e.g. "source") that will be used
            in the class marked by <code>locationTracker</code> to store the source tracking information and indirectly
            controls the names of the generated accessors. This attribute is only relevant in combination with
            <code>locationTracker</code> and must not be used on the same class.]]>
          </description>
          <comment>see org.codehaus.modello.plugin.model.ModelMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.tagName">
          <name>tagName</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            Define a tag name to be used in XML content, which can be different from the class name.
          </description>
          <comment>see org.codehaus.modello.plugin.model.ModelMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xdoc.anchorName">
          <name>anchorName</name>
          <version>2.0.0+</version>
          <type>String</type>
          <description>
            Define a anchor base name to be used in XML content, which can be different from the XML tag name name.
          </description>
          <comment>see org.codehaus.modello.plugin.model.ModelMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.enabled">
          <name>enabled</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <description>
            Enable or disable generation of a java source for this class in the model.
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.abstract">
          <name>abstractMode</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>
            Mark this class as abstract.
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.clone">
          <name>javaClone</name>
          <version>1.1.0+</version>
          <type>String</type>
          <description><![CDATA[
            Controls the generation of a <code>clone()</code> method for this class. Allowed values are
            <code>none</code>, <code>shallow</code> and <code>deep</code>. The value is inherited from super classes
            and defaults to <code>none</code> if no super class declares otherwise.]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.clone.hook">
          <name>javaCloneHook</name>
          <version>1.1.0+</version>
          <type>String</type>
          <description><![CDATA[
            Enables the usage of a custom hook method that will be called from the generated <code>clone()</code> method.
            The value of this attribute specifies the simple name of the hook method which is assumed to be provided as
            part of some code segment. For convenience, the boolean literal <code>true</code> can also be given to use
            the default method name <code>cloneHook</code>. The hook method itself must have a single parameter whose
            type matches this class in order to receive the cloned object for further manipulation before completion of
            the clone operation. Besides, the hook method must not have a return value and must not throw a checked
            exception.]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xsd.compositor">
          <name>compositor</name>
          <version>1.0.0+</version>
          <type>String</type>
          <defaultValue>all</defaultValue>
          <description><![CDATA[
            Can be one of : <code>all</code>, <code>sequence</code>.]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xsd.metadata.XsdMetadataPlugin</comment>
        </field>
        <field xml.insertParentFieldsUpTo="versionRange">
          <name>superClass</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The name of the super class for this class.
          </description>
        </field>
        <field>
          <name>interfaces</name>
          <version>1.0.0+</version>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            A set of interfaces implemented by this class.
          </description>
        </field>
        <field>
          <name>packageName</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The destination package name for this class.
          </description>
        </field>
        <field xml.insertParentFieldsUpTo="comment">
          <name>fields</name>
          <version>1.0.0+</version>
          <association>
            <type>ModelField</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            Fields available in this class.
          </description>
        </field>
        <field>
          <name>codeSegments</name>
          <version>1.0.0+</version>
          <association>
            <type>CodeSegment</type>
            <multiplicity>*</multiplicity>
          </association>
          <description>
            List of code segments appended to this class.
          </description>
        </field>
      </fields>
    </class>

    <class>
      <name>ModelField</name>
      <version>1.0.0+</version>
      <description>
        A field to be defined in a class.
      </description>
      <superClass>VersionedElement</superClass>
      <fields>
        <field xml.attribute="true" xml.tagName="java.getter">
          <name>getter</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <description>
            Generate a getter method for this field.
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.setter">
          <name>setter</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <description>
            Generate a setter method for this field.
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xdoc.separator">
          <name>separator</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            Can be one of : <code>blank</code>.]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.attribute">
          <name>attribute</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>
            Consider this field as an XML attribute instead of an element.
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.content">
          <name>content</name>
          <version>1.4.0+</version>
          <type>boolean</type>
          <description>
            Consider this field as the content of the class' element.
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.trim">
          <name>trim</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <description>
            Trim the content when reading.
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.tagName">
          <name>tagName</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            Define a tag name to be used in XML content, which can be different from the field name.
            May be '*' (since version 2.1.0) to allow all names (this effectively disables XSD validation of this field).
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.format">
          <name>format</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            The date format to use when parsing/writing a date (see java SimpleDateFormat).
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.transient">
          <name>transientField</name>
          <version>1.1.0+</version>
          <type>boolean</type>
          <defaultValue>false</defaultValue>
          <description><![CDATA[
            Whether this field should be excluded from parsers and writers. Fields marked as transient carry runtime
            state that is not meant to be persisted into XML.]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.insertParentFieldsUpTo">
          <name>insertParentFieldsUpTo</name>
          <version>1.2.0+</version>
          <type>String</type>
          <description><![CDATA[
            Insert fields from parent class before this one in the XML representation of the class.]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.insertParentFieldsUpTo="name">
          <name>alias</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            Alias name for this field (a parser should allow for this name instead of the given name).
          </description>
        </field>
        <field xml.insertParentFieldsUpTo="versionRange">
          <name>type</name>
          <version>1.0.0+</version>
          <required>true</required>
          <type>String</type>
          <description><![CDATA[
            Simple type for this field (or array of such type). Can be one of : <code>boolean</code>, <code>byte</code>,
            <code>char</code>, <code>short</code>, <code>int</code>, <code>long</code>, <code>float</code>,
            <code>double</code>, <code>String</code>, <code>Boolean</code>, <code>Date</code>, <code>DOM</code>.]]>
          </description>
        </field>
        <field>
          <name>association</name>
          <version>1.0.0+</version>
          <association>
            <type>ModelAssociation</type>
          </association>
          <description>
            An association allows to map a field to a complex type
            and/or to map a field to a many-multiplicity element.
          </description>
        </field>
        <field>
          <name>defaultValue</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>The default value for this field.</description>
        </field>
        <!--field>
          <name>typeValidator</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[<i>Unused as far as I could see</i>]]>
          </description>
        </field-->
        <field>
          <name>required</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>
            Whether this field is required in model or not.
          </description>
        </field>
        <field>
          <name>identifier</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <description>
            Whether this field is part of the identification of the object or not.
          </description>
        </field>
      </fields>
    </class>

    <class>
      <name>ModelAssociation</name>
      <version>1.0.0+</version>
      <description>
        An association allows for mapping of a field to a complex type,
        or to a many-multiplicity field.
      </description>
      <fields>
        <field xml.attribute="true" xml.tagName="java.adder">
          <name>adder</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <description><![CDATA[
            Generate <code>add<i>FieldName</i>( <i>Type</i> )</code> and
            <code>remove<i>FieldName</i>( <i>Type</i> )</code> methods for this field
            (only for many multiplicity association).]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.bidi">
          <name>bidi</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <description><![CDATA[
            Generate <code>create<i>Type</i>Association( <i>Type</i> )</code> and
            <code>break<i>Type</i>Association( <i>Type</i> )</code> methods for this field
            (only for a bi-directional association: each class of the association has an association to the other,
            either one or many multiplicity).]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.useInterface">
          <name>interfaceName</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description><![CDATA[
            Use specified interface in generated methods signatures (<code>add</code>, <code>remove</code>,
            <code>createAssociation</code> and <code>breakAssociation</code>).]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.init">
          <name>initializationMode</name>
          <version>1.0.0+</version>
          <type>String</type>
          <defaultValue>lazy</defaultValue>
          <description><![CDATA[
            Can be one of : <code>lazy</code>, <code>constructor</code>, <code>field</code>.]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="java.clone">
          <name>javaClone</name>
          <version>1.1.0+</version>
          <type>String</type>
          <description><![CDATA[
            Allows to override the clone mode for this assocation. Allowed values are <code>shallow</code> and
            <code>deep</code>. If the value is not specified, the clone mode of the container class will be used.]]>
          </description>
          <comment>see org.codehaus.modello.plugin.java.metadata.JavaMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.tagName">
          <name>associationTagName</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            Define a tag name to be used for every element inside a multiple association. By default, the name is
            calculated as the singular of the field tag name.
            May be '*' (since version 2.1.0) to allow all names (this effectively disables XSD validation of this field).
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.itemsStyle">
          <name>itemsStyle</name>
          <version>1.0.0+</version>
          <type>String</type>
          <defaultValue>wrapped</defaultValue>
          <description><![CDATA[
            Can be one of : <code>wrapped</code>, <code>flat</code>. <code>wrapped</code> means that the content items
            will be wrapped into an element, where <code>flat</code> doesn't add this wrapping element. Example:
            <pre>&lt;wrappedElements&gt;
  &lt;wrappedElement&gt;<i>element type content</i>&lt;/wrappedElement&gt;
  ...
&lt;wrappedElements&gt;
&lt;flatElement&gt;<i>element type content</i>&lt;/flatElement&gt;
...</pre>]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.mapStyle">
          <name>mapStyle</name>
          <version>1.0.0+</version>
          <type>String</type>
          <defaultValue>inline</defaultValue>
          <description><![CDATA[
            Can be one of : <code>inline</code>, <code>explode</code>. Example:
            <pre>&lt;inlineProperties&gt;
  &lt;<i>the key</i>&gt;<i>the value</i>&lt;/<i>the key</i>&gt;
  ...
&lt;/inlineProperties&gt;
&lt;explodeProperties&gt;
  &lt;explodeProperty&gt;
    &lt;key&gt;<i>the key</i>&lt;/key&gt;
    &lt;value&gt;<i>the value</i>&lt;/value&gt;
  &lt;/explodeProperty&gt;
  ...
&lt;/explodeProperties&gt;</pre>]]>
          </description>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.attribute="true" xml.tagName="xml.reference">
          <name>reference</name>
          <version>1.0.0+</version>
          <type>boolean</type>
          <comment>see org.codehaus.modello.plugins.xml.metadata.XmlMetadataPlugin</comment>
        </field>
        <field xml.tagName="type">
          <name>to</name>
          <version>1.0.0+</version>
          <required>true</required>
          <type>String</type>
        </field>
        <field>
          <name>multiplicity</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            Can be 1 if only one such child is allowed, or * if any
            number (0 to infinity) is allowed.
          </description>
          <defaultValue>1</defaultValue>
        </field>
      </fields>
    </class>
  </classes>
</model>

