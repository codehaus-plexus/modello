<?xml version="1.0"?>
<!-- =================== DO NOT EDIT THIS FILE ====================         -->
<!-- Generated by Modello 1.8.3,                                            -->
<!-- any modifications will be overwritten.                                 -->
<!-- ==============================================================         -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" xmlns="http://codehaus-plexus.github.io/MODELLO/2.0.0" targetNamespace="http://codehaus-plexus.github.io/MODELLO/2.0.0">
  <xs:element name="model" type="Model">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">
        Root tag for the description of a model.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Model">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">
        Root tag for the description of a model.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">Unique identifier of this model.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The name of the element.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A user-level description of the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="comment" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A private comment about the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="defaults">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            List of defaults settings for properties of this model.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="default" minOccurs="0" maxOccurs="unbounded" type="ModelDefault"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="versionDefinition" type="VersionDefinition">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">Information on model version recognition support.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="interfaces">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            List of interfaces provided by the model.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="interface" minOccurs="0" maxOccurs="unbounded" type="ModelInterface"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="classes">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            List of classes provided by the model.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="class" minOccurs="0" maxOccurs="unbounded" type="ModelClass"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="java.suppressAllWarnings" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation source="version">1.1.0+</xs:documentation>
        <xs:documentation source="description">
            Add &lt;code&gt;@SuppressWarnings( &quot;all&quot; )&lt;/code&gt; to all generated sources if Java 5 is enabled.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.namespace" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            The namespace to use when generating XML content. Since Modello 1.0, this value can contain
            &lt;code&gt;${version}&lt;/code&gt; placeholder, which will be replaced by the model version during generation.
            Before Modello 1.0, this attribute was in class element.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.schemaLocation" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            The schemaLocation to use when generating XML content. Since Modello 1.0-alpha-13, this value can contain
            &lt;code&gt;${version}&lt;/code&gt; placeholder, which will be replaced by the model version during generation.
            Before Modello 1.0, this attribute was in class element.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xsd.namespace" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            The namespace to use when generating XSD. Since Modello 1.0: &lt;ul&gt;
            &lt;li&gt;if this value is not set, &lt;code&gt;xml.namespace&lt;/code&gt; is used instead,&lt;/li&gt;
            &lt;li&gt;this value can contain &lt;code&gt;${version}&lt;/code&gt; placeholder, which will be replaced by the model version
            during generation.&lt;/li&gt;&lt;/ul&gt;
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xsd.targetNamespace" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            The targetNamespace to use when generating XSD. Since Modello 1.0&lt;ul&gt;
            &lt;li&gt;if this value is not set, &lt;code&gt;xml.namespace&lt;/code&gt; or &lt;code&gt;xsd.namespace&lt;/code&gt; is used instead,&lt;/li&gt;
            &lt;li&gt;this value can contain &lt;code&gt;${version}&lt;/code&gt; placeholder, which will be replaced by the model version
            during generation.&lt;/li&gt;&lt;/ul&gt;
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ModelInterface">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">An interface provided by the model.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The name of the element.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The versions related to this element.
            Examples: &lt;code&gt;1.0.0&lt;/code&gt; (a precise version), &lt;code&gt;1.0.0+&lt;/code&gt; (a version or higher),
            &lt;code&gt;1.0.0/2.0.0&lt;/code&gt; (a version range).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="superInterface" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The name of the super interface for this interface.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="packageName" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The destination package name for this interface.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="annotations">
        <xs:annotation>
          <xs:documentation source="version">1.3.0+</xs:documentation>
          <xs:documentation source="description">
            Java annotations for the element (inserted in generated sources for the model only if Java 5 source
            generation feature is enabled).
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="annotation" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A user-level description of the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="comment" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A private comment about the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="codeSegments">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            List of code segments appended to this interface.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="codeSegment" minOccurs="0" maxOccurs="unbounded" type="CodeSegment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="CodeSegment">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">
        A segment of code to be appended to this element.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The versions related to this element.
            Examples: &lt;code&gt;1.0.0&lt;/code&gt; (a precise version), &lt;code&gt;1.0.0+&lt;/code&gt; (a version or higher),
            &lt;code&gt;1.0.0/2.0.0&lt;/code&gt; (a version range).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="comment" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A private comment about the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The code block.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="VersionDefinition">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The type of model version definition recognition. Can be one of: &lt;code&gt;field&lt;/code&gt;,
            &lt;code&gt;namespace&lt;/code&gt;, &lt;code&gt;field+namespace&lt;/code&gt;.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="value" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">If type contains &lt;code&gt;field&lt;/code&gt;, the name of the field containing the model
            version.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="ModelDefault">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">
        A default setting for some of the properties of this model. Available properties are:
 &lt;table&gt;
 &lt;tr&gt;&lt;th&gt;key&lt;/th&gt;&lt;th&gt;since&lt;/th&gt;&lt;th&gt;default value&lt;/th&gt;&lt;th&gt;usage&lt;/th&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;&lt;code&gt;package&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;model&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;The package where java classes are generated by default if no &lt;code&gt;packageName&lt;/code&gt; defined
     in class or interface model&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;&lt;code&gt;java.util.List&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;new java.util.ArrayList&amp;lt;?&amp;gt;()&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;The default code generated for &lt;code&gt;List&lt;/code&gt; fields initialization&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;&lt;code&gt;java.util.Set&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;new java.util.HashSet&amp;lt;?&amp;gt;()&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;The default code generated for &lt;code&gt;Set&lt;/code&gt; fields initialization&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;&lt;code&gt;java.util.Map&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;new java.util.HashMap()&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;The default code generated for &lt;code&gt;Map&lt;/code&gt; fields initialization&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;new java.util.Properties()&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;The default code generated for &lt;code&gt;Properties&lt;/code&gt; fields initialization&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;&lt;code&gt;strictXmlAttributes&lt;/code&gt;&lt;/td&gt;&lt;td&gt;1.2&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, reading an XML document with strict parsing enabled not only checks
     elements but attributes too (new in Modello 1.2). Setting this property to &lt;code&gt;false&lt;/code&gt;
     makes strict parsing behave like previously, ie ignoring attributes.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;&lt;code&gt;checkDeprecation&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
   &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, checks that if a class has a version range with a specified upper version,
     its &lt;code&gt;deprecatedVersion&lt;/code&gt; is not null&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="key" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The key to this property. Can be one of: &lt;code&gt;checkDeprecation&lt;/code&gt;,
           &lt;code&gt;package&lt;/code&gt;, &lt;code&gt;java.util.List&lt;/code&gt;, &lt;code&gt;java.util.Map&lt;/code&gt;,
           &lt;code&gt;java.util.Properties&lt;/code&gt;, &lt;code&gt;java.util.Set&lt;/code&gt;,
           &lt;code&gt;strictXmlAttributes&lt;/code&gt;.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="value" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The value of this property.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="ModelClass">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">A class for this model.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The name of the element.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The versions related to this element.
            Examples: &lt;code&gt;1.0.0&lt;/code&gt; (a precise version), &lt;code&gt;1.0.0+&lt;/code&gt; (a version or higher),
            &lt;code&gt;1.0.0/2.0.0&lt;/code&gt; (a version range).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="superClass" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The name of the super class for this class.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="interfaces">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A set of interfaces implemented by this class.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="interface" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="packageName" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The destination package name for this class.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="annotations">
        <xs:annotation>
          <xs:documentation source="version">1.3.0+</xs:documentation>
          <xs:documentation source="description">
            Java annotations for the element (inserted in generated sources for the model only if Java 5 source
            generation feature is enabled).
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="annotation" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A user-level description of the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="comment" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A private comment about the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="fields">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            Fields available in this class.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="field" minOccurs="0" maxOccurs="unbounded" type="ModelField"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="codeSegments">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            List of code segments appended to this class.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="codeSegment" minOccurs="0" maxOccurs="unbounded" type="CodeSegment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="rootElement" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Indicates that this class is the root of the model (only one class in a model can have this attribute set
            to true).
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="javag.generateToString" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.8.0+</xs:documentation>
        <xs:documentation source="description">
            Will generate toString method for all fields of the class (disable per default).
            toString method is still generated per default for identifier field.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.standaloneRead" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation source="version">1.4.1+</xs:documentation>
        <xs:documentation source="description">
            If true, the xml reader will have read methods that allow to read xml that has this class as root element.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="locationTracker" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.4.0+</xs:documentation>
        <xs:documentation source="description">
            Indicates that this class is used to track line/column information (at most one class in a model can have this
            attribute set). The value of this attribute specifies the field name (in plural form, e.g. &quot;locations&quot;) that
            will be used in all other model classes to store the location tracking information and indirectly controls
            the names of the generated accessors.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sourceTracker" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.4.0+</xs:documentation>
        <xs:documentation source="description">
            Indicates that this class is used to track source file information (at most one class in a model can have
            this attribute set). The value of this attribute specifies the field name (e.g. &quot;source&quot;) that will be used
            in the class marked by &lt;code&gt;locationTracker&lt;/code&gt; to store the source tracking information and indirectly
            controls the names of the generated accessors. This attribute is only relevant in combination with
            &lt;code&gt;locationTracker&lt;/code&gt; and must not be used on the same class.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="referencedByTracker" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">2.1.0+</xs:documentation>
        <xs:documentation source="description">
          Indicates that this class is used to track referenced-by information (at most one class in a model can have
          this attribute set). The value of this attribute specifies the field name (e.g. &quot;referencedByTracker&quot;) that
          will be used in the class marked by &lt;code&gt;referencedByTracker&lt;/code&gt; to store the reference tracking
          information and indirectly controls the names of the generated accessors. This attribute is only relevant in
          combination with &lt;code&gt;locationTracker&lt;/code&gt; and must be used on the same class.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.tagName" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Define a tag name to be used in XML content, which can be different from the class name.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xdoc.anchorName" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">2.0.0+</xs:documentation>
        <xs:documentation source="description">
            Define a anchor base name to be used in XML content, which can be different from the XML tag name name.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.enabled" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Enable or disable generation of a java source for this class in the model.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.abstract" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Mark this class as abstract.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.clone" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.1.0+</xs:documentation>
        <xs:documentation source="description">
            Controls the generation of a &lt;code&gt;clone()&lt;/code&gt; method for this class. Allowed values are
            &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;shallow&lt;/code&gt; and &lt;code&gt;deep&lt;/code&gt;. The value is inherited from super classes
            and defaults to &lt;code&gt;none&lt;/code&gt; if no super class declares otherwise.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.clone.hook" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.1.0+</xs:documentation>
        <xs:documentation source="description">
            Enables the usage of a custom hook method that will be called from the generated &lt;code&gt;clone()&lt;/code&gt; method.
            The value of this attribute specifies the simple name of the hook method which is assumed to be provided as
            part of some code segment. For convenience, the boolean literal &lt;code&gt;true&lt;/code&gt; can also be given to use
            the default method name &lt;code&gt;cloneHook&lt;/code&gt;. The hook method itself must have a single parameter whose
            type matches this class in order to receive the cloned object for further manipulation before completion of
            the clone operation. Besides, the hook method must not have a return value and must not throw a checked
            exception.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xsd.compositor" type="xs:string" default="all">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Can be one of : &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;sequence&lt;/code&gt;.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ModelField">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">
        A field to be defined in a class.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The name of the element.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="alias" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            Alias name for this field (a parser should allow for this name instead of the given name).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            The versions related to this element.
            Examples: &lt;code&gt;1.0.0&lt;/code&gt; (a precise version), &lt;code&gt;1.0.0+&lt;/code&gt; (a version or higher),
            &lt;code&gt;1.0.0/2.0.0&lt;/code&gt; (a version range).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            Simple type for this field (or array of such type). Can be one of : &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;,
            &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;,
            &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;DOM&lt;/code&gt;.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="association" type="ModelAssociation">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            An association allows to map a field to a complex type
            and/or to map a field to a many-multiplicity element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="defaultValue" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">The default value for this field.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="required" type="xs:boolean" default="false">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            Whether this field is required in model or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="identifier" type="xs:boolean" default="false">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            Whether this field is part of the identification of the object or not.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="annotations">
        <xs:annotation>
          <xs:documentation source="version">1.3.0+</xs:documentation>
          <xs:documentation source="description">
            Java annotations for the element (inserted in generated sources for the model only if Java 5 source
            generation feature is enabled).
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="annotation" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A user-level description of the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="comment" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            A private comment about the element.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="java.getter" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Generate a getter method for this field.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.setter" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Generate a setter method for this field.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xdoc.separator" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Can be one of : &lt;code&gt;blank&lt;/code&gt;.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.attribute" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Consider this field as an XML attribute instead of an element.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.content" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation source="version">1.4.0+</xs:documentation>
        <xs:documentation source="description">
            Consider this field as the content of the class&apos; element.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.trim" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Trim the content when reading.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.tagName" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Define a tag name to be used in XML content, which can be different from the field name.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.format" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            The date format to use when parsing/writing a date (see java SimpleDateFormat).
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.transient" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation source="version">1.1.0+</xs:documentation>
        <xs:documentation source="description">
            Whether this field should be excluded from parsers and writers. Fields marked as transient carry runtime
            state that is not meant to be persisted into XML.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.insertParentFieldsUpTo" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.2.0+</xs:documentation>
        <xs:documentation source="description">
            Insert fields from parent class before this one in the XML representation of the class.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ModelAssociation">
    <xs:annotation>
      <xs:documentation source="version">1.0.0+</xs:documentation>
      <xs:documentation source="description">
        An association allows for mapping of a field to a complex type,
        or to a many-multiplicity field.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="0" name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="multiplicity" type="xs:string" default="1">
        <xs:annotation>
          <xs:documentation source="version">1.0.0+</xs:documentation>
          <xs:documentation source="description">
            Can be 1 if only one such child is allowed, or * if any
            number (0 to infinity) is allowed.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="java.adder" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Generate &lt;code&gt;add&lt;i&gt;FieldName&lt;/i&gt;( &lt;i&gt;Type&lt;/i&gt; )&lt;/code&gt; and
            &lt;code&gt;remove&lt;i&gt;FieldName&lt;/i&gt;( &lt;i&gt;Type&lt;/i&gt; )&lt;/code&gt; methods for this field
            (only for many multiplicity association).
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.bidi" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Generate &lt;code&gt;create&lt;i&gt;Type&lt;/i&gt;Association( &lt;i&gt;Type&lt;/i&gt; )&lt;/code&gt; and
            &lt;code&gt;break&lt;i&gt;Type&lt;/i&gt;Association( &lt;i&gt;Type&lt;/i&gt; )&lt;/code&gt; methods for this field
            (only for a bi-directional association: each class of the association has an association to the other,
            either one or many multiplicity).
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.useInterface" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Use specified interface in generated methods signatures (&lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;,
            &lt;code&gt;createAssociation&lt;/code&gt; and &lt;code&gt;breakAssociation&lt;/code&gt;).
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.init" type="xs:string" default="lazy">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Can be one of : &lt;code&gt;lazy&lt;/code&gt;, &lt;code&gt;constructor&lt;/code&gt;, &lt;code&gt;field&lt;/code&gt;.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="java.clone" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.1.0+</xs:documentation>
        <xs:documentation source="description">
            Allows to override the clone mode for this assocation. Allowed values are &lt;code&gt;shallow&lt;/code&gt; and
            &lt;code&gt;deep&lt;/code&gt;. If the value is not specified, the clone mode of the container class will be used.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.tagName" type="xs:string">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Define a tag name to be used for every element inside a multiple association. By default, the name is
            calculated as the singular of the field tag name.
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.itemsStyle" type="xs:string" default="wrapped">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Can be one of : &lt;code&gt;wrapped&lt;/code&gt;, &lt;code&gt;flat&lt;/code&gt;. &lt;code&gt;wrapped&lt;/code&gt; means that the content items
            will be wrapped into an element, where &lt;code&gt;flat&lt;/code&gt; doesn&apos;t add this wrapping element. Example:
            &lt;pre&gt;&amp;lt;wrappedElements&amp;gt;
  &amp;lt;wrappedElement&amp;gt;&lt;i&gt;element type content&lt;/i&gt;&amp;lt;/wrappedElement&amp;gt;
  ...
&amp;lt;wrappedElements&amp;gt;
&amp;lt;flatElement&amp;gt;&lt;i&gt;element type content&lt;/i&gt;&amp;lt;/flatElement&amp;gt;
...&lt;/pre&gt;
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.mapStyle" type="xs:string" default="inline">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
        <xs:documentation source="description">
            Can be one of : &lt;code&gt;inline&lt;/code&gt;, &lt;code&gt;explode&lt;/code&gt;. Example:
            &lt;pre&gt;&amp;lt;inlineProperties&amp;gt;
  &amp;lt;&lt;i&gt;the key&lt;/i&gt;&amp;gt;&lt;i&gt;the value&lt;/i&gt;&amp;lt;/&lt;i&gt;the key&lt;/i&gt;&amp;gt;
  ...
&amp;lt;/inlineProperties&amp;gt;
&amp;lt;explodeProperties&amp;gt;
  &amp;lt;explodeProperty&amp;gt;
    &amp;lt;key&amp;gt;&lt;i&gt;the key&lt;/i&gt;&amp;lt;/key&amp;gt;
    &amp;lt;value&amp;gt;&lt;i&gt;the value&lt;/i&gt;&amp;lt;/value&amp;gt;
  &amp;lt;/explodeProperty&amp;gt;
  ...
&amp;lt;/explodeProperties&amp;gt;&lt;/pre&gt;
          </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xml.reference" type="xs:boolean" default="false">
      <xs:annotation>
        <xs:documentation source="version">1.0.0+</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>