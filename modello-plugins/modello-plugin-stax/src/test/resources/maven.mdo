<!--
 |
 | o add specification element to a field, this would be more a technical description of
 |   what is allowed in the field.
 |
 | o validators: there could be several levels of validation. Simple type validation could
 |   be done with a regex, but we need inter-field validation and rules which could be
 |   dealt with by something like drools.
 |
 | o i18n: would be good to be able to have names/descriptions/specifications
 |   in as many languages as possible.
 |
 | o versioning of individual elements on the class level and the field level so that
 |   different versions of the model can be output.
 |
 | o annotation mechanism so that changes to the model can be accurately tracked.
 |
 -->
<model xml.namespace="http://codehaus-plexus.github.io/test/${version}" xml.schemaLocation="http://codehaus-plexus.github.io/modello/xsd/maven-${version}.xsd">
  <id>maven</id>
  <name>Maven</name>
  <description>Maven's model for Java project.</description>
  <defaults>
    <default>
      <key>package</key>
      <value>org.codehaus.modello.test.model</value>
    </default>
  </defaults>
  <classes>
    <class rootElement="true" xml.tagName="mavenModel">
      <name>Model</name>
      <version>3.0.0+</version>
      <fields>
        <field xml.attribute="true" xml.tagName="extender">
          <name>extend</name>
          <version>3.0.0+</version>
          <description>
            The location of the parent project, if one exists. Values from the parent project will be
            the default for this project if they are left unspecified.
            The path may be absolute, or relative to the current project.xml file.
          </description>
          <type>String</type>
          <defaultValue>foo</defaultValue>
        </field>
        <field>
          <name>parent</name>
          <version>4.0.0</version>
          <description>Specified which project to extend.</description>
          <association>
            <type>Parent</type>
          </association>
        </field>
        <field xml.attribute="true">
          <name>modelVersion</name>
          <version>4.0.0</version>
          <required>true</required>
          <description>The version of this model you are using.</description>
          <type>String</type>
        </field>
        <field xml.attribute="true">
          <name>pomVersion</name>
          <version>3.0.0</version>
          <required>true</required>
          <type>String</type>
        </field>
        <field>
          <name>id</name>
          <version>3.0.0</version>
          <required>true</required>
          <description>
            The id of the project.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>groupId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>The primary grouping for your project.</description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>The identifier used when generating the artifact for your project.</description>
          <type>String</type>
        </field>
        <field>
          <name>type</name>
          <version>4.0.0</version>
          <description>The type of artifact this project produces.</description>
          <type>String</type>
          <defaultValue>jar</defaultValue>
        </field>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>Human readable name of the project.</description>
          <type>String</type>
        </field>
        <field>
          <name>currentVersion</name>
          <version>3.0.0</version>
          <required>true</required>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>4.0.0</version>
          <required>true</required>
          <description>The current version of the project.</description>
          <type>String</type>
        </field>
        <field>
          <name>shortDescription</name>
          <version>3.0.0+</version>
          <description>An abbreviated description of the project.</description>
          <type>String</type>
        </field>
        <field>
          <name>description</name>
          <version>3.0.0+</version>
          <description>
            A detailed description of the project. This element is
            usually specified as CDATA to enable the use of HTML tags
            within the description. This description is used to
            generate the
            &lt;a href="plugins/site/index.html"&gt;front page&lt;/a&gt;
            of the project's web site.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <alias>website</alias>
          <version>3.0.0+</version>
          <description>The URL where the project can be found.</description>
          <type>String</type>
        </field>
        <field>
          <name>logo</name>
          <version>3.0.0+</version>
          <description>The logo for the project.</description>
          <type>String</type>
        </field>
        <field>
          <name>issueTrackingUrl</name>
          <version>3.0.0</version>
          <description>The URL where the issue tracking system used by the project can be found.</description>
          <type>String</type>
        </field>
        <field>
          <name>issueManagement</name>
          <version>4.0.0</version>
          <description>The project's issue management information.</description>
          <association>
            <type>IssueManagement</type>
          </association>
        </field>
        <field>
          <name>ciManagement</name>
          <version>4.0.0</version>
          <description>The project's continuous integration management information.</description>
          <association>
            <type>CiManagement</type>
          </association>
        </field>
        <field>
          <name>inceptionYear</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>The year the project started.</description>
          <type>String</type>
        </field>
        <field>
          <name>gumpRepositoryId</name>
          <version>3.0.0</version>
          <description>Hint for the gump continuous integration build system.</description>
          <type>String</type>
        </field>
        <field>
          <name>siteAddress</name>
          <version>3.0.0</version>
          <description>The FQDN of the host where the project's site is uploaded.</description>
          <type>String</type>
        </field>
        <field>
          <name>siteDirectory</name>
          <version>3.0.0</version>
          <description>The directory on the site host where site documentation is placed when the site is
            uploaded.</description>
          <type>String</type>
        </field>
        <field>
          <name>distributionSite</name>
          <version>3.0.0</version>
          <description>The FQDN of the host where the project's artifacts are uploaded.</description>
          <type>String</type>
          <comment>This naming is inconsistent and distribution should occur from a repository structure.</comment>
        </field>
        <field>
          <name>distributionDirectory</name>
          <version>3.0.0</version>
          <description>The directory on the distribution host where artifacts are placed when uploaded.</description>
          <type>String</type>
          <comment>This naming is inconsistent and distribution should occur from a repository structure.</comment>
        </field>
        <field>
          <name>components</name>
          <version>4.0.0</version>
          <association xml.itemsStyle="flat">
            <type>Component</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>

        <field>
          <name>repositories</name>
          <version>4.0.0</version>
          <description>The lists of the remote repositories</description>
          <association xml.tagName="repo">
            <type>Repository</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>pluginRepositories</name>
          <version>4.0.0</version>
          <description>The lists of the remote repositories for discovering plugins</description>
          <comment>This may be removed or relocated in the near future. It is undecided whether plugins really need a
            remote repository set of their own.</comment>
          <association>
            <type>Repository</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>mailingLists</name>
          <version>3.0.0+</version>
          <description>The mailing lists for the project.</description>
          <association>
            <type>MailingList</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>developers</name>
          <version>3.0.0+</version>
          <description>
            This element describes all of the developers associated with a
            project. Each developer is described by a
            &lt;code&gt;developer&lt;/code&gt; element, which is then described by
            additional elements (described below). The auto-generated site
            documentation references this information.
          </description>
          <association>
            <type>Developer</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>contributors</name>
          <version>3.0.0+</version>
          <description>
            This element describes all of the contributors associated with a
            project who are not developers. Each contributor is described by a
            &lt;code&gt;contributor&lt;/code&gt; element, which is then describe by additional
            elements (described below). The auto-generated site documentation
            references this information.
          </description>
          <association>
            <type>Contributor</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>dependencies</name>
          <version>3.0.0+</version>
          <description>
            This element describes all of the dependencies associated with a
            project. Each dependency is described by a
            &lt;code&gt;dependency&lt;/code&gt; element, which is then described by
            additional elements (described below).
          </description>
          <association>
            <type>Dependency</type>
            <multiplicity>*</multiplicity>
          </association>
          <comment>These should ultimately only be compile time dependencies when transitive dependencies come into
            play.</comment>
        </field>
        <field>
          <name>overrides</name>
          <version>4.0.0</version>
          <description>
            This element describes all of the dependency overrides for a
            project. Each dependency is described by a
            &lt;code&gt;override&lt;/code&gt; element, which is then described by
            additional elements (described below).
          </description>
          <association>
            <type>Override</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>licenses</name>
          <version>3.0.0+</version>
          <description>
            This element describes all of the licenses for this project. Each license is described by a
            &lt;code&gt;license&lt;/code&gt; element, which is then describe by additional
            elements (described below). The auto-generated site documentation
            references this information. Projects should only list the license(s) that
            applies to the project and not the licenses that apply to dependencies.
          </description>
          <association>
            <type>License</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>versions</name>
          <version>3.0.0</version>
          <description>The released versions of the project.</description>
          <association>
            <type>Version</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>branches</name>
          <version>3.0.0</version>
          <description>The SCM branches create for the project.</description>
          <association>
            <type>Branch</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>packageGroups</name>
          <version>3.0.0+</version>
          <description>Package groups required for complete javadocs.</description>
          <association>
            <type>PackageGroup</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>reports</name>
          <version>3.0.0+</version>
          <description>
            This element includes the specification of reports to be
            included in a Maven-generated site. These reports will be run
            when a user executes
            &lt;code&gt;maven site&lt;/code&gt;. All of the
            reports will be included in the navigation bar for browsing in
            the order they are specified.
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>scm</name>
          <version>4.0.0</version>
          <description>Specification for the SCM use by the project.</description>
          <association>
            <type>Scm</type>
          </association>
        </field>
        <field>
          <name>repository</name>
          <version>3.0.0</version>
          <description>Specification for the SCM use by the project.</description>
          <association>
            <type>Repository</type>
          </association>
          <comment>This element needs to be renamed as it conflicts with the existing notion of repositories in
            Maven.</comment>
        </field>
        <field xml.tagName="builder">
          <name>build</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>Information required to build the project.</description>
          <association>
            <type>Build</type>
          </association>
        </field>
        <field>
          <name>organization</name>
          <alias>organisation</alias>
          <version>3.0.0+</version>
          <description>
            This element describes various attributes of the organziation to
            which the project belongs. These attributes are utilized when
            documentation is created (for copyright notices and links).
          </description>
          <association>
            <type>Organization</type>
          </association>
        </field>
        <field>
          <name>distributionManagement</name>
          <version>4.0.0</version>
          <description>Distribution information for a project.</description>
          <association>
            <type>DistributionManagement</type>
          </association>
        </field>
        <field>
          <name>local</name>
          <version>4.0.0</version>
          <required>false</required>
          <description>Local configuration information.</description>
          <association>
            <type>Local</type>
          </association>
        </field>
        <!-- @todo long run 4.0.0 may not need properties, with the parameters being specified
          for the plugin directly -->
        <field>
          <name>properties</name>
          <version>3.0.0+</version>
          <description>
            Properties about the project. This allows you to configure your project and the
            plugins it uses.
          </description>
          <type>Properties</type>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>preGoals</name>
          <version>4.0.0</version>
          <description>Set of decorator(s) injected before the target goal(s).</description>
          <association>
            <type>PreGoal</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>postGoals</name>
          <version>4.0.0</version>
          <description>Set of decorator(s) injected after the target goal(s).</description>
          <association>
            <type>PostGoal</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <!-- We need this because we can't use package as a field name. -->
      <!-- @todo this means it is undocumented. Should we instead provide an optional field name so package can be mapped to the field packageName? -->
      <codeSegments>
        <codeSegment>
          <version>3.0.0</version>
          <code>
            public void setVersion(String version)
            {
            this.currentVersion = version;
            }

            public String getVersion()
            {
            return currentVersion;
            }
          </code>
        </codeSegment>
        <codeSegment>
          <version>3.0.0+</version>
          <code>
            private String packageName;

            public void setPackage(String packageName)
            {
            this.packageName = packageName;
            }

            public String getPackage()
            {
            return packageName;
            }
          </code>
        </codeSegment>
        <codeSegment>
          <version>4.0.0</version>
          <code>
            public String getId()
            {
            StringBuilder id = new StringBuilder();

            id.append( getGroupId() );
            id.append( ":" );
            id.append( getArtifactId() );
            id.append( ":" );
            id.append( getType() );
            id.append( ":" );
            id.append( getVersion() );

            return id.toString();
            }
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <!-- @todo: is any of this too CVS specific? Investigate other SCMs -->
    <class>
      <name>Branch</name>
      <version>3.0.0+</version>
      <description>
        This element describes each of the branches of the
        project. Each branch is described by a
        &lt;code&gt;tag&lt;/code&gt;
        element
      </description>
      <fields>
        <field>
          <name>tag</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            The branch tag in the version control system
            (e.g. cvs) used by the project for the source
            code associated with this branch of the
            project.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>description</name>
          <version>4.0.0</version>
          <description>
            A description of the branch and its strategy.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>lastMergeTag</name>
          <version>4.0.0</version>
          <description>
            This is the tag in the version control system that was last used
            to merge from the branch to the current codebase. Future merges
            should merge only the changes from this tag to the next.
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>Build</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>nagEmailAddress</name>
          <version>3.0.0</version>
          <description>
            An address to which notifications regarding the status of builds
            for this project can be sent. This is intended for use by tools
            which do unattended builds, for example those providing for
            continuous integration. Currently this is used by the
            &lt;a href="build-file.html#maven:gump-descriptor"&gt;maven:gump-descriptor&lt;/a&gt;
            target.
          </description>
          <type>String</type>
          <comment>This should be moved out of the build section. Vestigal for use with Gump.</comment>
        </field>
        <field>
          <name>sourceDirectory</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            This element specifies a directory containing the source
            of the project. The generated build system will compile
            the source in this directory when the project is built.
            The path given is relative to the project descriptor.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>unitTestSourceDirectory</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            This element specifies a directory containing the unit test
            source of the project. The generated build system will
            compile these directories when the project is being tested.
            The unit tests must use the JUnit test framework.
            The path given is relative to the project descriptor.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>aspectSourceDirectory</name>
          <version>3.0.0+</version>
          <description>
            This element specifies a directory containing Aspect
            sources of the project. The generated build system will
            compile the Aspects in this directory when the project is
            built if Aspects have been enabled (see the
            &lt;a href="plugins/aspectj/goals.html"&gt;Aspectj goals&lt;/a&gt; document).
            The path given is relative to the project descriptor.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>integrationUnitTestSourceDirectory</name>
          <version>3.0.0+</version>
          <description>
            This element specifies a directory containing integration test
            sources of the project.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>sourceModifications</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            This element describes all of the sourceModifications associated with a
            project. Each source modification is described by a
            &lt;code&gt;sourceModification&lt;/code&gt; element, which is then described by
            additional elements (described below). These modifications are used
            to exclude or include various source depending on the environment
            the build is running in.
          </description>
          <association>
            <type>SourceModification</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>unitTest</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>This element specifies unit tests associated with the project.</description>
          <association>
            <type>UnitTest</type>
          </association>
          <defaultValue>new UnitTest()</defaultValue>
        </field>
        <field>
          <name>resources</name>
          <version>3.0.0+</version>
          <description>
            This element describes all of the resources associated with a project or unit tests.
            Each resource is described by a resource element, which is then described by additional
            elements (described
            &lt;a href="#resource"&gt;below&lt;/a&gt;). These resources are used to
            complete the jar file or to run unit test.
          </description>
          <association>
            <type>Resource</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>directory</name>
          <version>4.0.0</version>
          <description>
            The directory where all generated by the build is placed.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>output</name>
          <version>4.0.0</version>
          <description>
            The directory where compiled application classes are placed.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>finalName</name>
          <version>4.0.0</version>
          <description>
            The filename (including an extension, but with no path information) that the produced artifact
            will be called. The default value is artifactId-version.extension (where extension is derived from
            type).
          </description>
          <type>String</type>
        </field>
        <field>
          <name>testOutput</name>
          <version>4.0.0</version>
          <description>
            The directory where compiled test classes are placed.
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>CiManagement</name>
      <version>4.0.0</version>
      <fields>
        <field>
          <name>system</name>
          <version>4.0.0</version>
          <description>The name of the continuous integration system i.e. Bugzilla</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0</version>
          <description>Url for the continuous integration system use by the project.</description>
          <type>String</type>
        </field>
        <field>
          <name>nagEmailAddress</name>
          <version>4.0.0</version>
          <description>Email address for the party to be notified on unsuccessful builds.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>Contributor</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>The full name of the contributor.</description>
          <type>String</type>
        </field>
        <field>
          <name>email</name>
          <version>3.0.0+</version>
          <description>The email address of the contributor.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>The URL for the homepage of the contributor.</description>
          <type>String</type>
        </field>
        <field>
          <name>organization</name>
          <version>3.0.0+</version>
          <description>The organization to which the contributor belongs.</description>
          <type>String</type>
        </field>
        <field>
          <name>roles</name>
          <version>3.0.0+</version>
          <description>
            The roles the contributor plays in the project. Each role is
            describe by a
            &lt;code&gt;role&lt;/code&gt; element, the body of which is a
            role name.
          </description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>timezone</name>
          <version>3.0.0+</version>
          <description>
            The timezone the contributor is in. This is a number in the range -14 to 14.
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>Dependency</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>id</name>
          <version>3.0.0</version>
          <required>true</required>
          <description>
            The id of the project.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>groupId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            The project group that produced the dependency, e.g.
            &lt;code&gt;geronimo&lt;/code&gt;.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            The unique id for an artifact produced by the project group, e.g.
            &lt;code&gt;germonimo-jms&lt;/code&gt;
          </description>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>3.0.0+</version>
          <required>true</required>
          <description>
            The version of the dependency., e.g.
            &lt;code&gt;3.2.1&lt;/code&gt;
          </description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>
            This url will be provided to the user if the jar file cannot be downloaded
            from the central repository.
          </description>
          <type>String</type>
          <comment>The URL should really be gleaned from a shared database of dependency information.</comment>
        </field>
        <field>
          <name>jar</name>
          <version>3.0.0</version>
          <description>Literal name of the artifact.</description>
          <type>String</type>
        </field>
        <field>
          <name>artifact</name>
          <version>4.0.0+</version>
          <description>Literal name of the artifact</description>
          <type>String</type>
        </field>
        <field>
          <name>type</name>
          <version>3.0.0+</version>
          <description>
            Other known recognised dependency types are:
            &lt;code&gt;ejb&lt;/code&gt; and
            &lt;code&gt;plugin&lt;/code&gt;.
          </description>
          <type>String</type>
          <defaultValue>jar</defaultValue>
        </field>
        <field>
          <name>properties</name>
          <version>3.0.0+</version>
          <description>
            Properties about the dependency. Various plugins allow you to
            &lt;code&gt;mark&lt;/code&gt; dependencies with properties. For example the
            &lt;a href="plugins/war/index.html"&gt;war&lt;/a&gt; plugin looks for a
            &lt;code&gt;war.bundle&lt;/code&gt; property, and if found will include the dependency
            in
            &lt;code&gt;WEB-INF/lib&lt;/code&gt;. For example syntax, check the war plugin docs.
          </description>
          <type>Properties</type>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0</version>
          <code>
            public String getId()
            {
            return groupId + ":" + artifactId + ":" + type + ":" + version;
            }

            public String toString()
            {
            return groupId + "/" + type + "s:" + artifactId + "-" + version;
            }
          </code>
        </codeSegment>
        <codeSegment>
          <version>3.0.0</version>
          <code><![CDATA[
            public String getArtifactDirectory()
            {
                return getGroupId();
            }

            public String getArtifact()
            {
                // If the jar name has been explicty set then use that. This
                // is when the <jar/> element is explicity used in the POM.
                if ( getJar() != null)
                {
                    return getJar();
                }

                return getArtifactId() + "-" + getVersion() + "." + getExtension();
            }

            public String getExtension()
            {
                if ("ejb".equals(getType()) || "plugin".equals(getType()) || "aspect".equals(getType())) return "jar";
                return getType();
            }

            public boolean isAddedToClasspath()
            {
                return ("jar".equals(getType()) || "ejb".equals(getType()));
            }

            public boolean isPlugin()
            {
                return ("plugin".equals(getType()));
            }

            public String getProperty( String property )
            {
                return getProperties().getProperty( property );
            }

            public boolean equals( Object o )
            {
                if ( o == null )
                {
                    return false;
                }

                if ( getClass() != o.getClass() )
                {
                    return false;
                }

                if ( getId() != null )
                {
                    return getId().equals( ( (Dependency) o ).getId() );
                }
                else
                {
                    return ( (Dependency) o ).getId() == null;
                }
            }

            public int hashCode()
            {
                if ( getId() != null )
                {
                    return getId().hashCode();
                }
                else
                {
                    return super.hashCode();
                }
            }
          ]]></code>
        </codeSegment>
      </codeSegments>
    </class>
    <class>
      <name>Override</name>
      <version>4.0.0</version>
      <fields>
        <field>
          <name>groupId</name>
          <version>4.0.0</version>
          <required>true</required>
          <description>
            The project group that produced the dependency, e.g.
            &lt;code&gt;geronimo&lt;/code&gt;.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>4.0.0</version>
          <required>true</required>
          <description>
            The unique id for an artifact produced by the project group, e.g.
            &lt;code&gt;germonimo-jms&lt;/code&gt;
          </description>
          <type>String</type>
        </field>
        <field>
          <name>type</name>
          <version>4.0.0</version>
          <description>
            Other known recognised dependency types are:
            &lt;code&gt;ejb&lt;/code&gt; and
            &lt;code&gt;plugin&lt;/code&gt;.
          </description>
          <type>String</type>
          <defaultValue>jar</defaultValue>
        </field>
        <!-- @todo this doesn't consider forced-version overrides, and do we need the version to override? -->
        <field>
          <name>version</name>
          <version>4.0.0</version>
          <required>true</required>
          <description>
            The version of the dependency., e.g.
            &lt;code&gt;3.2.1&lt;/code&gt;
          </description>
          <type>String</type>
        </field>
        <field>
          <name>file</name>
          <version>4.0.0</version>
          <required>true</required>
          <description>
            The filename of the dependency that will be used to override the one from the repository, e.g.
            &lt;code&gt;lib/non-distributable-code-1.3.jar&lt;/code&gt;
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <superClass>Contributor</superClass>
      <name>Developer</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>id</name>
          <version>3.0.0+</version>
          <description>The username of the developer.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>IssueManagement</name>
      <version>4.0.0</version>
      <fields>
        <field>
          <name>system</name>
          <version>4.0.0</version>
          <description>The name of the issue management system i.e. Bugzilla</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0</version>
          <description>Url for the issue management system use by the project.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>DistributionManagement</name>
      <version>4.0.0</version>
      <description>
        This elements describes all that pertains to distribution for a project.
      </description>
      <fields>
        <field>
          <name>repository</name>
          <version>4.0.0</version>
          <description>Information needed for deploying to remote repository artifacts generated by the
            project</description>
          <association>
            <type>Repository</type>
          </association>
        </field>
        <field>
          <name>site</name>
          <description>Information needed for deploying website files of the project.</description>
          <version>4.0.0</version>
          <association>
            <type>Site</type>
          </association>
        </field>
      </fields>
    </class>
    <class>
      <name>License</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>The full legal name of the license.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>The official url for the license text.</description>
          <type>String</type>
        </field>
        <field>
          <name>distribution</name>
          <version>3.0.0</version>
          <description>
            The primary method by which this project may be distributed.
            &lt;dl&gt;
            &lt;dt&gt;repo&lt;/dt&gt;
            &lt;dd&gt;may be downloaded from the Maven repository&lt;/dd&gt;
            &lt;dt&gt;manual&lt;/dt&gt;
            &lt;dd&gt;user must manually download and install the dependency.&lt;/dd&gt;
            &lt;/dl&gt;
          </description>
          <type>String</type>
        </field>
        <field>
          <name>comments</name>
          <version>3.0.0+</version>
          <description>the description</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>MailingList</name>
      <version>3.0.0+</version>
      <description>
        This element describes all of the mailing lists associated with
        a project. Each mailing list is described by a
        &lt;code&gt;mailingList&lt;/code&gt; element, which is then described by
        additional elements (described below). The auto-generated site
        documentation references this information.
      </description>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>The name of the mailing list.</description>
          <type>String</type>
        </field>
        <field>
          <name>subscribe</name>
          <version>3.0.0+</version>
          <description>
            The email address or link that can be used to subscribe to the mailing list.
            If this is an email address, a
            &lt;code&gt;mailto:&lt;/code&gt; link will automatically be created when
            the documentation is created.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>unsubscribe</name>
          <version>3.0.0+</version>
          <description>
            The email address or link that can be used to unsubscribe to
            the mailing list. If this is an email address, a
            &lt;code&gt;mailto:&lt;/code&gt; link will automatically be created
            when the documentation is created.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>post</name>
          <version>4.0.0</version>
          <description>
            The email address or link that can be used to post to
            the mailing list. If this is an email address, a
            &lt;code&gt;mailto:&lt;/code&gt; link will automatically be created
            when the documentation is created.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>archive</name>
          <version>3.0.0+</version>
          <description>The link to a URL where you can browse the archive.</description>
          <type>String</type>
          <comment>This should probably be removed from 4.0.0 before alpha-1</comment>
        </field>
        <field>
          <name>archives</name>
          <version>4.0.0</version>
          <description>The link to a URL where you can browse the archive.</description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <comment>
        We could probably have a specific element for a dev mailing list for
        things like CI, and maybe even a specific element for the user and scm
        mailing lists. Then leave the more lose structure for any other type
        of mailing list.
      </comment>
    </class>
    <class>
      <name>Organization</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0+</version>
          <description>The full name of the organization.</description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0+</version>
          <description>The URL to the organization's home page.</description>
          <type>String</type>
        </field>
        <field>
          <name>logo</name>
          <version>3.0.0+</version>
          <description>
            The URL to the organization's logo image. This can be an URL relative
            to the base directory of the generated web site,
            (e.g.,
            &lt;code&gt;/images/org-logo.png&lt;/code&gt;) or an absolute URL
            (e.g.,
            &lt;code&gt;http://my.corp/logo.png&lt;/code&gt;). This value is used
            when generating the project documentation.
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>PackageGroup</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>title</name>
          <version>3.0.0+</version>
          <description>the description</description>
          <type>String</type>
        </field>
        <field>
          <name>packages</name>
          <version>3.0.0+</version>
          <description>the description</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>PatternSet</name>
      <version>3.0.0+</version>
      <fields>
        <field>
          <name>includes</name>
          <version>3.0.0+</version>
          <description>the description</description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>excludes</name>
          <version>3.0.0+</version>
          <description>the description</description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>3.0.0+</version>
          <!-- @todo: should these be built somewhere so they are only created once, and can be modified? -->
          <code>
            public java.util.List getDefaultExcludes()
            {
            java.util.List defaultExcludes = new java.util.ArrayList();
            defaultExcludes.add( "**/*~" );
            defaultExcludes.add( "**/#*#" );
            defaultExcludes.add( "**/.#*" );
            defaultExcludes.add( "**/%*%" );
            defaultExcludes.add( "**/._*" );

            // CVS
            defaultExcludes.add( "**/CVS" );
            defaultExcludes.add( "**/CVS/**" );
            defaultExcludes.add( "**/.cvsignore" );

            // SCCS
            defaultExcludes.add( "**/SCCS" );
            defaultExcludes.add( "**/SCCS/**" );

            // Visual SourceSafe
            defaultExcludes.add( "**/vssver.scc" );

            // Subversion
            defaultExcludes.add( "**/.svn" );
            defaultExcludes.add( "**/.svn/**" );

            // Mac
            defaultExcludes.add( "**/.DS_Store" );
            return defaultExcludes;
            }
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <class>
      <name>Parent</name>
      <version>4.0.0</version>
      <fields>
        <field>
          <name>artifactId</name>
          <version>4.0.0</version>
          <description>The artifact id of the project to extend.</description>
          <type>String</type>
        </field>
        <field>
          <name>groupId</name>
          <version>4.0.0</version>
          <description>The group id of the project to extend.</description>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>4.0.0</version>
          <description>The versi>on of the project to extend.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>Repository</name>
      <version>3.0.0</version>
      <fields>
        <field>
          <name>connection</name>
          <version>3.0.0</version>
          <description>
            The source configuration management system URL
            that describes the repository and how to connect to the
            repository. This is used by Maven when
            &lt;a href="plugins/dist/index.html"&gt;building versions&lt;/a&gt;
            from specific ID.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>developerConnection</name>
          <version>3.0.0</version>
          <description>
            Just like connection, but for developers, i.e. this scm connection
            will not be read only.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>3.0.0</version>
          <description>The URL to the project's browsable CVS repository.</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>Scm</name>
      <version>4.0.0</version>
      <fields>
        <field>
          <name>connection</name>
          <version>4.0.0</version>
          <description>
            The source configuration management system URL
            that describes the repository and how to connect to the
            repository. This is used by Maven when
            &lt;a href="plugins/dist/index.html"&gt;building versions&lt;/a&gt;
            from specific ID.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>developerConnection</name>
          <version>4.0.0</version>
          <description>
            Just like connection, but for developers, i.e. this scm connection
            will not be read only.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0</version>
          <description>The URL to the project's browsable CVS repository.</description>
          <type>String</type>
        </field>
        <field>
          <name>branches</name>
          <version>4.0.0</version>
          <description>The SCM branches that are currently active for the project. These should only be those forked
            from the current branch or trunk that are intended to be used.</description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
    </class>
    <class>
      <name>Resource</name>
      <version>3.0.0+</version>
      <superClass>PatternSet</superClass>
      <fields>
        <field>
          <name>directory</name>
          <version>3.0.0+</version>
          <description>
            Describe the directory where the resource is stored.
            The path may be absolute, or relative to the project.xml file.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>targetPath</name>
          <version>3.0.0+</version>
          <description>
            Describe the resource target path. For example, if you want that resource
            appear into a specific package (
            &lt;code&gt;org.apache.maven.messages&lt;/code&gt;), you must specify this
            element with this value :
            &lt;code&gt;org/apache/maven/messages&lt;/code&gt;
          </description>
          <type>String</type>
        </field>
        <field>
          <name>filtering</name>
          <version>3.0.0+</version>
          <description>Describe if resources are filtered or not.</description>
          <type>String</type>
          <defaultValue>false</defaultValue>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>3.0.0+</version>
          <code>
            public boolean isFiltering()
            {
            return !"false".equals( filtering );
            }

            public void setFiltering( boolean filtering )
            {
            this.filtering = ( filtering ? "true" : "false" );
            }
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <class>
      <name>SourceModification</name>
      <version>3.0.0+</version>
      <superClass>Resource</superClass>
      <fields>
        <field>
          <name>className</name>
          <version>3.0.0+</version>
          <description>
            If the class with this name can
            &lt;strong&gt;not&lt;/strong&gt; be
            loaded, then the includes and excludes specified below
            will be applied to the contents of the
            &lt;a href="#sourceDirectory"&gt;sourceDirectory&lt;/a&gt;
          </description>
          <type>String</type>
        </field>
        <field>
          <name>property</name>
          <version>3.0.0+</version>
          <description>the description</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>UnitTest</name>
      <version>3.0.0+</version>
      <superClass>PatternSet</superClass>
      <fields>
        <field>
          <name>resources</name>
          <version>3.0.0+</version>
          <description>the description</description>
          <association>
            <type>Resource</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
    </class>
    <class>
      <name>Version</name>
      <version>3.0.0</version>
      <description>
        This element describes each of the previous versions of the
        project. Each version is described by a
        &lt;code&gt;version&lt;/code&gt;
        element
      </description>
      <fields>
        <field>
          <name>name</name>
          <version>3.0.0</version>
          <description>
            The external version number under which this release was distributed. Examples include:
            &lt;code&gt;1.0&lt;/code&gt;,
            &lt;code&gt;1.1-alpha1&lt;/code&gt;,
            &lt;code&gt;1.2-beta&lt;/code&gt;,
            &lt;code&gt;1.3.2&lt;/code&gt; etc.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>tag</name>
          <version>3.0.0</version>
          <description>
            The name given in the version control system (e.g. cvs) used by the project for the source
            code associated with this version of the project.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>id</name>
          <version>3.0.0</version>
          <description>
            A unique identifier for a version. This ID is
            used to specify the version that
            &lt;a href="plugins/dist/index.html"&gt;
            &lt;code&gt;maven:dist&lt;/code&gt;
            &lt;/a&gt; builds.
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>

    <class>
      <name>Repository</name>
      <version>4.0.0</version>
      <description>
        Repository contains the information needed
        for establishing connections with remote repoistory
      </description>
      <fields>
        <field>
          <name>id</name>
          <version>4.0.0</version>
          <description>
            A unique identifier for a repository.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>name</name>
          <version>4.0.0</version>
          <description>
            Human readable name of the repository
          </description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0</version>
          <description>
            The url of of the repository
          </description>
          <type>String</type>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>4.0.0</version>
          <code>
            public boolean equals( Object obj )
            {
            Repository other = ( Repository ) obj;

            boolean retValue = false;

            if ( id != null )
            {
            retValue = id.equals( other.id );
            }

            return retValue;
            }
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <!--@todo find better solution for managment of site deployments -->
    <class>
      <name>Site</name>
      <version>4.0.0</version>
      <description>
        Site contains the information needed
        for deploying websites.
      </description>
      <fields>
        <field>
          <name>id</name>
          <version>4.0.0</version>
          <description>
            A unique identifier for a deployment locataion.
          </description>
          <type>String</type>
        </field>
        <field>
          <name>name</name>
          <version>4.0.0</version>
          <description>
            Human readable name of the deployment location
          </description>
          <type>String</type>
        </field>
        <field>
          <name>url</name>
          <version>4.0.0</version>
          <description>
            The url of of the location where website is deployed
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <name>GoalDecorator</name>
      <version>4.0.0</version>
      <fields>
        <field>
          <name>name</name>
          <version>4.0.0</version>
          <description>The target goal which should be decorated.</description>
          <type>String</type>
        </field>
        <field>
          <name>attain</name>
          <version>4.0.0</version>
          <description>
            The goal which should be injected into the execution chain.
          </description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class>
      <superClass>GoalDecorator</superClass>
      <name>PreGoal</name>
      <version>4.0.0</version>
      <fields></fields>
    </class>
    <class>
      <superClass>GoalDecorator</superClass>
      <name>PostGoal</name>
      <version>4.0.0</version>
      <fields></fields>
    </class>

    <!-- @todo should modello take a parameter/code segment that will forbid the
         specification of this in a project other than the user pom? -->
    <class>
      <name>Local</name>
      <version>4.0.0</version>
      <description>
        Local contains the information that is specific to the user's
        local environment. This would only be expected in a user or site pom,
        not a project POM.
      </description>
      <fields>
        <!-- @todo should local repository actually be part of the <repositories/> element, or be of repository type? -->
        <field>
          <name>repository</name>
          <version>4.0.0</version>
          <description>
            The local repository that contains downloaded artifacts.
          </description>
          <type>String</type>
          <!-- @todo systemProperty tag (maven.repo.local value) should be supported by modello -->
        </field>
        <field>
          <name>online</name>
          <version>4.0.0</version>
          <description>
            Whether to run the build online. If not, no remote repositories are consulted for plugins or dependencies
            and this configuration may be used by other plugins requiring online access.
          </description>
          <type>boolean</type>
          <defaultValue>true</defaultValue>
          <!-- @todo systemProperty tag (maven.online value) should be supported by modello -->
        </field>
      </fields>
    </class>
    <class>
      <name>Component</name>
      <version>4.0.0</version>
      <fields>
        <field>
          <name>name</name>
          <version>4.0.0</version>
          <type>String</type>
        </field>
        <field xml.attribute="true">
          <name>comment</name>
          <version>4.0.0</version>
          <type>String</type>
        </field>
        <field>
          <name>components</name>
          <version>4.0.0</version>
          <association xml.itemsStyle="flat">
            <type>Component</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>custom</name>
          <type>DOM</type>
          <version>4.0.0</version>
        </field>
        <field>
          <name>properties</name>
          <version>4.0.0</version>
          <type>Properties</type>
          <association xml.mapStyle="explode">
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>flatProperties</name>
          <version>4.0.0</version>
          <type>Properties</type>
          <association xml.mapStyle="inline">
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
      </fields>
    </class>
  </classes>
</model>
